name: Scan web application for security vulnerabilities
description: |
  Scan application for security vulnerabilities with OWASP ZAP Full Scan
inputs:
  test_user:
    description: Set user
    required: true
    default: true
  test_password:
    description: Set password
    required: true
    default: null
  target:
    description: Target url to scan
    required: true
  cmd_options:
    description: Set additional command line parameters
    required: false
  zap_configfile:
    description: Config for zap to use. Include ajax spider and active scan
    required: true
  report_artifact:
    description: Report artifact name
    default: vuln-full-scan-report
    required: false
  fail_on_alert:
    default: true
    required: false
runs:
  using: composite
  steps:
    - name: Pull ZAP image and make report template
      run: |
        /usr/bin/touch report_html.html report_json.json
        /usr/bin/chmod a+w report_html.html report_json.json
        docker pull owasp/zap2docker-stable -q
      shell: bash
    - name: Scan with ZAP full scan
      run: | 
        docker run -v $(pwd):/zap/wrk/:rw --network="host" -t owasp/zap2docker-stable bash -c \
        "zap.sh -cmd -addonupdate; \
        zap.sh -cmd -addoninstallall; \
        zap.sh -cmd -autorun /zap/wrk/${{ inputs.zap_configfile }} ${{ inputs.cmd_options }}; \
        cp /home/zap/report_html.html /home/zap/report_json.json /zap/wrk/"
      shell: bash
      env:
        ZAP_BASE_URL: ${{ inputs.target }}
        ZAP_MS_USER: ${{ inputs.test_user }}
        ZAP_MS_PASSWD: ${{ inputs.test_password }}
    
    - name: Upload full scan results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: ${{ inputs.report_artifact }}
        path: report_html.html
    - name: Upload full scan results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: report-json
        path: report_json.json

    - name: Check if any alerts were risen
      if: ${{ inputs.fail_on_alert == true }}
      run: |
        if jq -e '.site[].alerts[] | select(.riskcode | contains("3") or contains("2"))' "report_json.json" >/dev/null; \
        then echo "The ZAP scan raised alerts. Please check them."; exit 1; \
        else echo "Good to go!"; exit 0; fi
      shell: bash

