name: Scan web application for security vulnerabilities
description: |
  Scan application for security vulnerabilities with OWASP ZAP Full Scan
inputs:
  test_user:
    description: Set user
    required: true
    default: true
  test_password:
    description: Set password
    required: true
    default: null
  target:
    description: URL of the web application to be scanned
    required: true
  cmd_options:
    description: Set additional command line parameters
    required: false
  zap_configfile:
    description: Config for zap to use. Include ajax spider and active scan
    required: false
  zap_script:
    description: http sender
    required: false
  zap_rules:
    description: Rules for ZAP to ignore
    required: false
  report_artifact:
    description: Report artifact name
    default: vuln-full-scan-report
    required: false
runs:
  using: composite
  steps:
    - name: Scan with ZAP full scan
      uses: zaproxy/action-full-scan@v0.4.0
      with:
        target: ${{ inputs.target }}
        # target: http://$(ip -f inet -o addr show docker0 | awk '{print $4}' | cut -d '/' -f 1):5713
        rules_file_name: ${{ inputs.zap_rules }}
        # cmd_options: -d -l INFO -T 2 -c "${{ inputs.zap_configfile }}" ${{ inputs.cmd_options }}
        cmd_options: -j -d -l WARN -T 2 -z "-addoninstall jython \
          -config script.scripts.name=http-sender \
          -config script.scripts.engine=jython \
          -config script.scripts.type=httpsender \
          -config script.scripts.enabled=true \
          -config script.scripts.file=/zap/wrk/${{ inputs.zap_script }}"
        allow_issue_writing: false
      env:
        ZAP_BASE_URL: ${{ inputs.target }}
        ZAP_MS_USER: ${{ inputs.test_user }}
        ZAP_MS_PASSWD: ${{ inputs.test_password }}
    
    - name: Upload full scan results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: ${{ inputs.report_artifact }}
        path: report_html.html
